{"ast":null,"code":"/** @format */\nimport { SIGN_IN, SIGN_OUT } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n}; // export const createStream = (formValues) => async (dispatch, getState) => {\n//   const { userId } = getState().auth;\n//   const response = await streams.post(\"./streams\", { ...formValues, userId });\n//   dispatch({ type: CREATE_STREAM, payload: response.data });\n//   history.push(\"/\");\n// };\n// export const fetchStreams = () => async (dispatch) => {\n//   const response = await streams.get(\"/streams\");\n//   dispatch({ type: FETCH_STREAMS, payload: response.data });\n// };\n// export const fetchStream = (id) => async (dispatch) => {\n//   const response = await streams.get(`/streams/${id}`);\n//   dispatch({ type: FETCH_STREAM, payload: response.data });\n// };\n// export const editStream = (id, formValues) => async (dispatch) => {\n//   const response = await streams.patch(`/streams/${id}`, formValues);\n//   dispatch({ type: EDIT_STREAM, payload: response.data });\n//   history.push(\"/\");\n// };\n// export const deleteStream = (id) => async (dispatch) => {\n//   await streams.delete(`/streams/${id}`);\n//   dispatch({ type: DELETE_STREAM, payload: id });\n// };","map":{"version":3,"sources":["S:/merntailwind/socialn/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","signIn","userId","type","payload","signOut"],"mappings":"AAAA;AACA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,SAAlC;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,OADD;AAELK,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CAJM,C,CAMP;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["/** @format */\r\nimport { SIGN_IN, SIGN_OUT } from './types';\r\n\r\nexport const signIn = (userId) => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n\r\n// export const createStream = (formValues) => async (dispatch, getState) => {\r\n//   const { userId } = getState().auth;\r\n//   const response = await streams.post(\"./streams\", { ...formValues, userId });\r\n\r\n//   dispatch({ type: CREATE_STREAM, payload: response.data });\r\n//   history.push(\"/\");\r\n// };\r\n\r\n// export const fetchStreams = () => async (dispatch) => {\r\n//   const response = await streams.get(\"/streams\");\r\n\r\n//   dispatch({ type: FETCH_STREAMS, payload: response.data });\r\n// };\r\n\r\n// export const fetchStream = (id) => async (dispatch) => {\r\n//   const response = await streams.get(`/streams/${id}`);\r\n\r\n//   dispatch({ type: FETCH_STREAM, payload: response.data });\r\n// };\r\n\r\n// export const editStream = (id, formValues) => async (dispatch) => {\r\n//   const response = await streams.patch(`/streams/${id}`, formValues);\r\n\r\n//   dispatch({ type: EDIT_STREAM, payload: response.data });\r\n//   history.push(\"/\");\r\n// };\r\n\r\n// export const deleteStream = (id) => async (dispatch) => {\r\n//   await streams.delete(`/streams/${id}`);\r\n\r\n//   dispatch({ type: DELETE_STREAM, payload: id });\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}