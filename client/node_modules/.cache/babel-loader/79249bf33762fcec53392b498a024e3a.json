{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_FAIL, REGISTER_SUCCESS } from './types'; //REGISTER USER\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n};\nconst body = JSON.stringify({\n  name,\n  email,\n  password\n});\n\ntry {\n  const res = await axios.post('/api/users', body, config);\n  dispatch({\n    type: REGISTER_SUCCESS,\n    payload: res.data\n  });\n} catch (err) {\n  const errors = err.response.data.errors;\n\n  if (errors) {\n    errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n  }\n\n  dispatch({\n    type: REGISTER_FAIL\n  });\n}","map":{"version":3,"sources":["S:/merntailwind/socialn/client/src/actions/authAction.js"],"names":["axios","setAlert","REGISTER_FAIL","REGISTER_SUCCESS","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,SAAhD,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GACnB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KACA,MAAOC,QAAP,IAAoB;AAClB,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKD,CARI;AAUP,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAf,CAAb;;AAEA,IAAI;AACF,QAAMO,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AAEAD,EAAAA,QAAQ,CAAC;AACPQ,IAAAA,IAAI,EAAEb,gBADC;AAEPc,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,GAAD,CAAR;AAID,CAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,QAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,MAAIA,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAWf,QAAQ,CAACP,QAAQ,CAACsB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AAEDhB,EAAAA,QAAQ,CAAC;AACPQ,IAAAA,IAAI,EAAEd;AADC,GAAD,CAAR;AAGD","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport { REGISTER_FAIL, REGISTER_SUCCESS } from './types';\r\n\r\n//REGISTER USER\r\nexport const register =\r\n  ({ name, email, password }) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n  };\r\n\r\nconst body = JSON.stringify({ name, email, password });\r\n\r\ntry {\r\n  const res = await axios.post('/api/users', body, config);\r\n\r\n  dispatch({\r\n    type: REGISTER_SUCCESS,\r\n    payload: res.data\r\n  });\r\n} catch (err) {\r\n  const errors = err.response.data.errors;\r\n\r\n  if (errors) {\r\n    errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n  }\r\n\r\n  dispatch({\r\n    type: REGISTER_FAIL\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}